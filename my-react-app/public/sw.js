const CACHE_NAME = 'chat-app-v1';
const urlsToCache = [
  '/',
  '/static/js/bundle.js',
  '/static/css/main.css',
  '/manifest.json',
  '/sound/new_message.mp3',
  '/icons/icon-192x192.png',
  '/icons/icon-512x512.png'
];

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Service Worker
self.addEventListener('install', (event) => {
  console.log('üîß [Service Worker] –£—Å—Ç–∞–Ω–æ–≤–∫–∞...');
  event.waitUntil(
    caches.open(CACHE_NAME)
      .then((cache) => {
        console.log('üîß [Service Worker] –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤...');
        return cache.addAll(urlsToCache);
      })
      .catch((error) => {
        console.error('‚ùå [Service Worker] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
      })
  );
});

// –ê–∫—Ç–∏–≤–∞—Ü–∏—è Service Worker
self.addEventListener('activate', (event) => {
  console.log('‚úÖ [Service Worker] –ê–∫—Ç–∏–≤–∞—Ü–∏—è...');
  event.waitUntil(
    caches.keys().then((cacheNames) => {
      return Promise.all(
        cacheNames.map((cacheName) => {
          if (cacheName !== CACHE_NAME) {
            console.log('üóëÔ∏è [Service Worker] –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∫—ç—à–∞:', cacheName);
            return caches.delete(cacheName);
          }
        })
      );
    })
  );
});

// –ü–µ—Ä–µ—Ö–≤–∞—Ç –∑–∞–ø—Ä–æ—Å–æ–≤
self.addEventListener('fetch', (event) => {
  // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –∫ API
  if (event.request.url.includes('/api/')) {
    return;
  }

  event.respondWith(
    caches.match(event.request)
      .then((response) => {
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –µ—Å–ª–∏ –µ—Å—Ç—å
        if (response) {
          console.log('üì¶ [Service Worker] –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑ –∫—ç—à–∞:', event.request.url);
          return response;
        }

        // –ò–Ω–∞—á–µ –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ —Å–µ—Ç–∏
        console.log('üåê [Service Worker] –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑ —Å–µ—Ç–∏:', event.request.url);
        return fetch(event.request).then((response) => {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞
          if (!response || response.status !== 200 || response.type !== 'basic') {
            return response;
          }

          // –ö–ª–æ–Ω–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
          const responseToCache = response.clone();

          caches.open(CACHE_NAME)
            .then((cache) => {
              cache.put(event.request, responseToCache);
            });

          return response;
        });
      })
      .catch((error) => {
        console.error('‚ùå [Service Worker] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ:', error);
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ñ–ª–∞–π–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        if (event.request.destination === 'document') {
          return caches.match('/');
        }
      })
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
self.addEventListener('push', (event) => {
  console.log('üîî [Service Worker] –ü–æ–ª—É—á–µ–Ω–æ push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ');
  
  const options = {
    body: event.data ? event.data.text() : '–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
    icon: '/icons/icon-192x192.png',
    badge: '/icons/icon-72x72.png',
    vibrate: [100, 50, 100],
    data: {
      dateOfArrival: Date.now(),
      primaryKey: 1
    },
    actions: [
      {
        action: 'explore',
        title: '–û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç',
        icon: '/icons/icon-72x72.png'
      },
      {
        action: 'close',
        title: '–ó–∞–∫—Ä—ã—Ç—å',
        icon: '/icons/icon-72x72.png'
      }
    ]
  };

  event.waitUntil(
    self.registration.showNotification('Chat App', options)
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º
self.addEventListener('notificationclick', (event) => {
  console.log('üîî [Service Worker] –ö–ª–∏–∫ –ø–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—é:', event.action);
  
  event.notification.close();

  if (event.action === 'explore') {
    event.waitUntil(
      clients.openWindow('/')
    );
  }
});

// –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
self.addEventListener('sync', (event) => {
  console.log('üîÑ [Service Worker] –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è:', event.tag);
  
  if (event.tag === 'background-sync') {
    event.waitUntil(
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
      console.log('üîÑ [Service Worker] –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ñ–æ–Ω–æ–≤–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è')
    );
  }
});
